// Override variables
@import './assets/scss/variables.scss';
// Add bootstrap reboot
@import '../node_modules/bootstrap/scss/bootstrap-reboot.scss';
// Components
@import './assets/scss/components/fonts.scss';
@import './assets/scss/components/transitions.scss';
@import './assets/scss/components/buttons.scss';
@import './assets/scss/components/modals.scss';
@import './assets/scss/components/stars.scss';
@import './assets/scss/components/reviews.scss';
@import './assets/scss/components/forms.scss';
@import './assets/scss/components/form-control.scss';
@import './assets/scss/components/notifications.scss';
// Custom styles
hr {
  color: $gray-500;
}

#app {
  @include make-container();
  max-width: 1280px;
  margin-top: 15px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  border: 1px solid $border-color;
  border-radius: $border-radius;
}

.container {
  @include make-container();
}

.row {
  @include make-row();
}

.col {
  @include make-col();
}

.pl-1 {
  padding-left: 1rem;
}

.mb-1 {
  margin-bottom: 1rem;
}

.d-flex {
  display: flex;
}

.me-auto {
  margin-right: auto !important;
}

.align-items-center {
  align-items: center;
}

@each $color, $value in $theme-colors {
  .link-#{$color} {
    color: $value;

    @if $link-shade-percentage != 0 {
      &:hover,
      &:focus {
        color: if(
          color-contrast($value) == $color-contrast-light,
          shade-color($value, $link-shade-percentage),
          tint-color($value, $link-shade-percentage)
        );
      }
    }
  }
}
.link {
  text-decoration: none;
  transition: color 0.2s ease-in-out;
  cursor: pointer;
}

#add-customer-review {
  margin: 0 0 0 auto;
}

#modal-add-review {
  .stars {
    cursor: pointer;
    &:hover .star path {
      fill: var(--#{$variable-prefix}teal) !important;
    }
    .star:hover ~ .star path {
      fill: var(--#{$variable-prefix}gray-300) !important;
    }
  }
}
.btn-close {
  box-sizing: content-box;
  width: $btn-close-width;
  height: $btn-close-height;
  padding: $btn-close-padding-y $btn-close-padding-x;
  color: $btn-close-color;
  background: transparent escape-svg($btn-close-bg) center / $btn-close-width auto no-repeat; // include transparent for button elements
  border: 0; // for button elements
  @include border-radius();
  opacity: $btn-close-opacity;

  // Override <a>'s hover style
  &:hover {
    color: $btn-close-color;
    text-decoration: none;
    opacity: $btn-close-hover-opacity;
  }

  &:focus {
    outline: 0;
    box-shadow: $btn-close-focus-shadow;
    opacity: $btn-close-focus-opacity;
  }

  &:disabled,
  &.disabled {
    pointer-events: none;
    user-select: none;
    opacity: $btn-close-disabled-opacity;
  }
}
